name: snyk-analysis
on:

#  repository_dispatch:
#     type: [test_result]

  workflow_dispatch:
  push: 
    branches: [main]
    paths: [package.json]
  pull_request:
    branches: [main]
env:
     version: ${{ github.event.client_payload.version }}
jobs:
  snyk-analysis:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: create a file 
      run: touch my_file.txt
   # - name: Check out other repo
   #   uses: actions/checkout@master
   #   with:
   #     repository: albanm/node-libxslt
   #     path: node-libxslt
   #     token: ${{} secret.MY_PAT}
   # - name: Get libxslt file
   #   run: |
   #     echo ${HOME}
   #     cd ${HOME}/work/seerportal/seerportal
   #     ls -ltr
   #     cd node-libxslt
   #     ls -ltr
   # - name: Create build
   #   run: |
   #     rm -rf node_modules
   #     rm -rf package-lock.json
   #     npm i
   #     cd public
   #     rm -rf node_modules
   #     rm -rf yarn.lock
   #     yarn
   #     CI=false yarn run prod-build
   #     cd .. && ls -l && pwd 
   #     cd node-libxslt
   #     git submodule update --init
   #     npm install
   #     npm test
   #     cd .. && mv node-libxslt/ node_modules/libxslt/
   #     tar -cvf ${{ env.ARCHIVE_NAME }}.tar --exclude='.gitignore' --exclude='.git' --exclude='scripts' --exclude='uploads'  --exclude='backup' --exclude='logs' --exclude='qa' --exclude='public/public' --exclude='public/src' --exclude='public/README.md' --exclude='public/.gitignore' .
   #     gzip -f ${{ env.ARCHIVE_NAME }}.tar
   #     gzip -l ${{ env.ARCHIVE_NAME }}.tar
   #     pwd
   #     ls -l
   #     tar -rvf ${{ env.ARCHIVE_NAME }}.tar ./public/src/assets/networks/
   #     pwd
   #     ls -l

    - name: Archive production artifacts
      if: ${{ github.event.client_payload.passed }}
      uses: actions/upload-artifact@v3
      with:
        name: Build_${{ env.version }}.tar.gz
        path: my_file.txt
    
   # - name: Get current date
   #   id: date
   #   run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      
 

    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
    - name: upload release asset
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./my_file.txt
          asset_name: My_file.txt
          asset_content_type: application/octet-stream
