name: snyk-analysis
on:
  workflow_dispatch:
  push: 
    branches: [main]
    paths: [package.json]
  pull_request:
    branches: [main]
jobs:
  snyk-analysis:
    runs-on: ubuntu-20.04
    env:
      ARCHIVE_NAME: ${{ github.event.repository.name }}-2
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Check out other repo
      uses: actions/checkout@master
      with:
        repository: albanm/node-libxslt
        path: node-libxslt
        token: ${{ secrets.MY_PAT }}
    - name: Get libxslt file
      run: |
        echo ${HOME}
        cd ${HOME}/work/seerportal/seerportal
        ls -ltr
        cd node-libxslt
        ls -ltr
    - name: Create build
      run: |
        rm -rf node_modules
        rm -rf package-lock.json
        npm i
        cd public
        rm -rf node_modules
        rm -rf yarn.lock
        yarn
        CI=false yarn run prod-build
        cd .. && ls -l && pwd 
        cd node-libxslt
        git submodule update --init
        npm install
        npm test
        cd .. && mv node-libxslt/ node_modules/libxslt/
        tar -cvf ${{ env.ARCHIVE_NAME }}.tar --exclude='.gitignore' --exclude='.git' --exclude='scripts' --exclude='uploads'  --exclude='backup' --exclude='logs' --exclude='qa' --exclude='public/public' --exclude='public/src' --exclude='public/README.md' --exclude='public/.gitignore' .
        gzip -f ${{ env.ARCHIVE_NAME }}.tar
        gzip -l ${{ env.ARCHIVE_NAME }}.tar
        pwd
        ls -l
        tar -rvf ${{ env.ARCHIVE_NAME }}.tar ./public/src/assets/networks/
        pwd
        ls -l
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ARCHIVE_NAME }}.tar.gz
        path: /home/runner/work/seerportal/seerportal/${{ env.ARCHIVE_NAME }}.tar.gz
