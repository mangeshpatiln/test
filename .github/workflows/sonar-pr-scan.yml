name: SonarQube PR Scan

on:
  pull_request:
    types: [opened, reopened]

jobs:
  sonar_scan:
    runs-on: [self-hosted, SonarScan]

    steps:
      - name: Set up SonarQube Scanner
        run: |
          echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get PR author name
        id: pr_author
        run: |
          PR_AUTHOR=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }} | \
            jq -r .user.login)
          echo "PR_AUTHOR=$PR_AUTHOR" >> $GITHUB_ENV
      - name: Update SonarQube properties file
        run: |
          echo "sonar.projectKey=${PR_AUTHOR}" > sonar-project.properties
          echo "sonar.branch.name=${{ github.head_ref }}" >> sonar-project.properties
          echo "sonar.sources=." >> sonar-project.properties
          echo "sonar.host.url=http://192.168.0.25:9000" >> sonar-project.properties
          echo "sonar.login=${{ secrets.SONAR_TOKEN }}" >> sonar-project.properties

      - name: Verify and run SonarQube Scanner
        run: |
          cat sonar-project.properties
          sonar-scanner
      - name: Wait for SonarQube scan result (1 minute)
        run: sleep 60

      - name: Check SonarQube scan result
        id: scan_check
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          echo "Branch name: $BRANCH_NAME"

          ANALYSIS_DATE=$(curl -s -u ${{ secrets.SONAR_USERNAME }}:${{ secrets.SONAR_PASSWORD }} \
            "http://192.168.0.25:9000/api/components/show?component=${PR_AUTHOR}&branch=${BRANCH_NAME}" | jq -r '.component.analysisDate')

          DATE_ONLY=$(echo "$ANALYSIS_DATE" | awk -F'T' '{print $1}')
          TIME_ONLY=$(echo "$ANALYSIS_DATE" | awk -F'T' '{print $2}' | awk -F'+' '{print $1}')

          t1=$(date -d "${TIME_ONLY}" +%s || echo 0)
          t2=$(date +%s)
          DIFF=$((t2 - t1))
          TODAY=$(date +%Y-%m-%d)

          if [ "$DATE_ONLY" = "$TODAY" ] && [ "$DIFF" -lt 12000 ]; then
            BLOCKERCOUNT=$(curl -s -u ${{ secrets.SONAR_USERNAME }}:${{ secrets.SONAR_PASSWORD }} \
              "http://192.168.0.25:9000/api/issues/search?componentKeys=${PR_AUTHOR}&branch=${BRANCH_NAME}&resolved=false&severities=BLOCKER" | jq '.total')
            BUGCOUNT=$(curl -s -u ${{ secrets.SONAR_USERNAME }}:${{ secrets.SONAR_PASSWORD }} \
              "http://192.168.0.25:9000/api/issues/search?componentKeys=${PR_AUTHOR}&branch=${BRANCH_NAME}&resolved=false&types=BUG" | jq '.total')
            VULNCOUNT=$(curl -s -u ${{ secrets.SONAR_USERNAME }}:${{ secrets.SONAR_PASSWORD }} \
              "http://192.168.0.25:9000/api/issues/search?componentKeys=${PR_AUTHOR}&branch=${BRANCH_NAME}&resolved=false&types=VULNERABILITY" | jq '.total')
            HOTSPOTCOUNT=$(curl -s -u ${{ secrets.SONAR_USERNAME }}:${{ secrets.SONAR_PASSWORD }} \
              "http://192.168.0.25:9000/api/hotspots/search?projectKey=${PR_AUTHOR}&branch=${BRANCH_NAME}" | jq '.total')

            BLOCKERCOUNT=${BLOCKERCOUNT:-0}
            BUGCOUNT=${BUGCOUNT:-0}
            VULNCOUNT=${VULNCOUNT:-0}
            HOTSPOTCOUNT=${HOTSPOTCOUNT:-0}
            
            re='^[0-9]+$'
            [[ $BLOCKERCOUNT =~ $re ]] || BLOCKERCOUNT=0
            [[ $BUGCOUNT =~ $re ]] || BUGCOUNT=0
            [[ $VULNCOUNT =~ $re ]] || VULNCOUNT=0
            [[ $HOTSPOTCOUNT =~ $re ]] || HOTSPOTCOUNT=0
            
            echo "BLOCKERCOUNT=$BLOCKERCOUNT" >> $GITHUB_ENV
            echo "BUGCOUNT=$BUGCOUNT" >> $GITHUB_ENV
            echo "VULNERABILITYCOUNT=$VULNCOUNT" >> $GITHUB_ENV
            echo "SECURITYHOTSPOTCOUNT=$HOTSPOTCOUNT" >> $GITHUB_ENV
            echo "BLOCKER: $BLOCKERCOUNT, BUG: $BUGCOUNT, VULNERABILITY: $VULNCOUNT, HOTSPOT: $HOTSPOTCOUNT"

            if [ "$BLOCKERCOUNT" -eq 0 ] && [ "$BUGCOUNT" -eq 0 ] && [ "$VULNCOUNT" -eq 0 ] && [ "$HOTSPOTCOUNT" -eq 0 ]; then
              echo "Build=true" >> $GITHUB_ENV
            else
              echo "Build=false" >> $GITHUB_ENV
              exit 1
            fi
          else
            echo "Build=false" >> $GITHUB_ENV
            echo "Sonar scan not recent or not today."
            exit 1
          fi
